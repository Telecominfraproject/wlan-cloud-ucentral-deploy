# OpenWIFI Gateway (https://github.com/Telecominfraproject/wlan-cloud-ucentralgw/)
owgw:
  fullnameOverride: owgw

  configProperties:
    openwifi.kafka.enable: "true"
    openwifi.kafka.brokerlist: kafka:9092

# OpenWIFI Security (https://github.com/Telecominfraproject/wlan-cloud-ucentralsec)
owsec:
  fullnameOverride: owsec

  configProperties:
    openwifi.kafka.enable: "true"
    openwifi.kafka.brokerlist: kafka:9092

# OpenWIFI Firmware (https://github.com/Telecominfraproject/wlan-cloud-ucentralfms)
owfms:
  fullnameOverride: owfms

  configProperties:
    openwifi.kafka.enable: "true"
    openwifi.kafka.brokerlist: kafka:9092

# OpenWIFI Provisioning (https://github.com/Telecominfraproject/wlan-cloud-owprov/)
owprov:
  fullnameOverride: owprov

  configProperties:
    openwifi.kafka.enable: "true"
    openwifi.kafka.brokerlist: kafka:9092

# OpenWIFI Web UI (https://github.com/Telecominfraproject/wlan-cloud-ucentralgw-ui/)
owgwui:
  fullnameOverride: owgwui

# OpenWIFI Provisioning Web UI (https://github.com/Telecominfraproject/wlan-cloud-owprov-ui/)
owprovui:
  fullnameOverride: owprovui

# rttys (https://github.com/Telecominfraproject/wlan-cloud-ucentralgw-rtty)
rttys:
  enabled: true

  fullnameOverride: rttys

  config:
    token: 96181c567b4d0d98c50f127230068fa8

# kafka (https://github.com/bitnami/charts/blob/master/bitnami/kafka/)
kafka:
  enabled: true

  fullnameOverride: kafka

  image:
    registry: docker.io
    repository: bitnami/kafka
    tag: 2.8.0-debian-10-r43

  minBrokerId: 100

  zookeeper:
    fullnameOverride: zookeeper

# clustersysteminfo check
clustersysteminfo:
  enabled: false
  delay: 0 # number of seconds to delay clustersysteminfo execution

  fullnameOverride: clustersysteminfo

  images:
    clustersysteminfo:
      repository: tip-tip-wlan-cloud-ucentral.jfrog.io/clustersysteminfo
      tag: main
      pullPolicy: Always
#      regcred:
#        registry: tip-tip-wlan-cloud-ucentral.jfrog.io
#        username: username
#        password: password

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
    # limits:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  public_env_variables:
    FLAGS: "-s --connect-timeout 3"
    OWSEC: sec:16001
    CHECK_RETRIES: 30

  secret_env_variables:
    OWSEC_DEFAULT_USERNAME: tip@ucentral.com
    OWSEC_DEFAULT_PASSWORD: openwifi
    #OWSEC_NEW_PASSWORD: "" # Set this value in order for the check to work. Password must comply https://github.com/Telecominfraproject/wlan-cloud-ucentralsec/#authenticationvalidationexpression

  activeDeadlineSeconds: 2400
  backoffLimit: 5
  restartPolicy: OnFailure

# OpenWIFI Load Simulator (https://github.com/Telecominfraproject/wlan-cloud-owls)
owls:
  enabled: false

  fullnameOverride: owls

  configProperties:
    openwifi.kafka.enable: "true"
    openwifi.kafka.brokerlist: kafka:9092

# OpenWIFI Load Simulator UI (https://github.com/Telecominfraproject/wlan-cloud-owls-ui)
owlsui:
  enabled: false

  fullnameOverride: owlsui
