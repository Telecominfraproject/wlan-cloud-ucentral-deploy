version: '3'

volumes:
  ucentralgw_data:
    driver: local
  ucentralsec_data:
    driver: local
  ucentralfms_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_datalog:
    driver: local
  kafka_data:
    driver: local

networks:
  ucentral:

services:
  ucentralgw:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralgw:${UCENTRALGW_TAG}"
    networks:
      ucentral:
        aliases:
          - ${INTERNAL_UCENTRALGW_HOSTNAME}
    env_file:
      - ucentralgw.env
    depends_on:
      - kafka
      - rttys
    restart: unless-stopped
    volumes:
      - ucentralgw_data:${UCENTRALGW_ROOT}/persist
      - ./certs:/${UCENTRALGW_ROOT}/certs

  ucentralgw-ui:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralgw-ui:${UCENTRALGWUI_TAG}"
    networks:
      ucentral:
        aliases:
          - ${INTERNAL_UCENTRALGWUI_HOSTNAME}
    env_file:
      - ucentralgw-ui.env
    depends_on:
      - ucentralsec
      - ucentralgw
      - ucentralfms
    restart: unless-stopped

  ucentralsec:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralsec:${UCENTRALSEC_TAG}"
    networks:
      ucentral:
        aliases:
          - ${INTERNAL_UCENTRALSEC_HOSTNAME}
    env_file:
      - ucentralsec.env
    depends_on:
      - kafka
    restart: unless-stopped
    volumes:
      - ucentralsec_data:${UCENTRALSEC_ROOT}/persist
      - ./certs:/${UCENTRALSEC_ROOT}/certs

  ucentralfms:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralfms:${UCENTRALFMS_TAG}"
    networks:
      ucentral:
        aliases:
          - ${INTERNAL_UCENTRALFMS_HOSTNAME}
    env_file:
      - ucentralfms.env
    depends_on:
      - kafka
    restart: unless-stopped
    volumes:
      - ucentralfms_data:${UCENTRALFMS_ROOT}/persist
      - ./certs:/${UCENTRALFMS_ROOT}/certs

  rttys:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/rttys:${RTTYS_TAG}"
    networks:
      ucentral:
        aliases:
          - ${INTERNAL_RTTYS_HOSTNAME}
    restart: unless-stopped
    volumes:
      - ./certs/restapi-cert.pem:/etc/rttys/restapi-cert.pem
      - ./certs/restapi-key.pem:/etc/rttys/restapi-key.pem
      - ./rttys/rttys.conf:/rttys/rttys.conf

  zookeeper:
    image: "zookeeper:${ZOOKEEPER_TAG}"
    networks:
      ucentral:
    restart: unless-stopped
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog

  kafka:
    image: "docker.io/bitnami/kafka:${KAFKA_TAG}"
    networks:
      ucentral:
    env_file:
      - kafka.env
    restart: unless-stopped
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka

  traefik:
    image: "traefik:${TRAEFIK_TAG}"
    networks:
      ucentral:
    env_file:
      - traefik.env
    depends_on:
      - ucentralsec
      - ucentralgw
      - ucentralgw-ui
      - ucentralfms
      - rttys
    restart: unless-stopped
    ports:
      - "15002:15002"
      - "16002:16002"
      - "16003:16003"
      - "80:80"
      - "443:443"
      - "16001:16001"
      - "16004:16004"
      - "5913:5913"
