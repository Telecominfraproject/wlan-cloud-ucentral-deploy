version: '3'

volumes:
  ucentralgw_data:
    driver: local
  ucentralsec_data:
    driver: local
  ucentralfms_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_datalog:
    driver: local
  kafka_data:
    driver: local

services:
  ucentralgw.wlan.local:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralgw:${UCENTRALGW_TAG}"
    env_file:
      - .env_ucentralgw
    depends_on:
      - kafka
      - rttys
    restart: unless-stopped
    ports:
      - "15002:15002"
      - "127.0.0.1:16002:16002"
      - "16003:16003"
      - "127.0.0.1:16102:16102"
    volumes:
      - ucentralgw_data:/ucentralgw-data/persist
      - ./certs:/ucentralgw-data/certs

  ucentralgw-ui.wlan.local:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralgw-ui:${UCENTRALGWUI_TAG}"
    env_file:
      - .env_ucentralgw-ui
    depends_on:
      - ucentralsec.wlan.local
      - ucentralgw.wlan.local
      - ucentralfms.wlan.local
    restart: unless-stopped
    ports:
      - "127.0.0.1:80:80"

  ucentralsec.wlan.local:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralsec:${UCENTRALSEC_TAG}"
    env_file:
      - .env_ucentralsec
    depends_on:
      - kafka
    restart: unless-stopped
    ports:
      - "127.0.0.1:16001:16001"
      - "127.0.0.1:16101:16101"
    volumes:
      - ucentralsec_data:/ucentralsec-data/persist
      - ./certs:/ucentralsec-data/certs

  ucentralfms.wlan.local:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/ucentralfms:${UCENTRALFMS_TAG}"
    env_file:
      - .env_ucentralfms
    depends_on:
      - kafka
    restart: unless-stopped
    ports:
      - "127.0.0.1:16004:16004"
      - "127.0.0.1:16104:16104"
    volumes:
      - ucentralfms_data:/ucentralfms-data/persist
      - ./certs:/ucentralfms-data/certs

  rttys:
    image: "tip-tip-wlan-cloud-ucentral.jfrog.io/rttys:${RTTYS_TAG}"
    restart: unless-stopped
    ports:
    - "127.0.0.1:5912:5912"
    - "127.0.0.1:5913:5913"
    volumes:
      - ./certs/restapi-cert.pem:/etc/rttys/restapi-cert.pem
      - ./certs/restapi-key.pem:/etc/rttys/restapi-key.pem
      - ./rttys/rttys.conf:/rttys/rttys.conf

  zookeeper:
    image: "zookeeper:${ZOOKEEPER_TAG}"
    restart: unless-stopped
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog

  kafka:
    image: "docker.io/bitnami/kafka:${KAFKA_TAG}"
    env_file:
      - .env_kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
