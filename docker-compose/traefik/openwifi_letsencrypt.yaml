http:
  services:
    owgw-ui:
      loadBalancer:
        servers:
          - url: "http://owgw-ui.wlan.local:80/"
    owgw-restapi:
      loadBalancer:
        servers:
          - url: "https://owgw.wlan.local:16002/"
    owgw-fileupload:
      loadBalancer:
        servers:
          - url: "https://owgw.wlan.local:16003/"
    owsec-restapi:
      loadBalancer:
        servers:
          - url: "https://owsec.wlan.local:16001/"
    owfms-restapi:
      loadBalancer:
        servers:
          - url: "https://owfms.wlan.local:16004/"
    rttys:
      loadBalancer:
        servers:
          - url: "https://rttys.wlan.local:5913/"

  routers:
    owgw-ui-http:
      entryPoints: "owgwuihttp"
      service: "owgw-ui"
      rule: "Host(`{{ env "OWGWUI_HOSTNAME" }}`)"
    owgw-ui-https:
      entryPoints: "owgwuihttps"
      service: "owgw-ui"
      rule: "Host(`{{ env "OWGWUI_HOSTNAME" }}`)"
      tls:
        certResolver: "openwifi"
    owgw-fileupload:
      entryPoints: "owgwfileupload"
      service: "owgw-fileupload"
      rule: "Host(`{{ env "OWGWFILEUPLOAD_HOSTNAME" }}`)"
      tls:
        certResolver: "openwifi"
    owgw-restapi:
      entryPoints: "owgwrestapi"
      service: "owgw-restapi"
      rule: "Host(`{{ env "OWGW_HOSTNAME" }}`)"
      tls:
        certResolver: "openwifi"
    owsec-restapi:
      entryPoints: "owsecrestapi"
      service: "owsec-restapi"
      rule: "Host(`{{ env "OWSEC_HOSTNAME" }}`)"
      tls:
        certResolver: "openwifi"
    owfms-restapi:
      entryPoints: "owfmsrestapi"
      service: "owfms-restapi"
      rule: "Host(`{{env "OWFMS_HOSTNAME"}}`)"
      tls:
        certResolver: "openwifi"
    rttys:
      entryPoints: "rttys"
      service: "rttys"
      rule: "Host(`{{ env "RTTYS_HOSTNAME" }}`)"
      tls:
        certResolver: "openwifi"

tcp:
  services:
    owgw-websocket:
      loadBalancer:
        servers:
          - address: "owgw.wlan.local:15002"

  routers:
    owgw-websocket:
      entryPoints: "owgwwebsocket"
      service: "owgw-websocket"
      rule: "HostSNI(`*`)"
      tls:
        passthrough: true
