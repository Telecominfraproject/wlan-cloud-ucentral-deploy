volumes:
  postgresql_data:
    driver: local

services:
  owgw:
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
    command: ["./wait-for-postgres.sh", "postgresql", "/openwifi/owgw"]

  owsec:
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
    command: ["./wait-for-postgres.sh", "postgresql", "/openwifi/owsec"]

  owfms:
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
    command: ["./wait-for-postgres.sh", "postgresql", "/openwifi/owfms"]

  owprov:
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
    command: ["./wait-for-postgres.sh", "postgresql", "/openwifi/owprov"]

  owanalytics:
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
    command: ["./wait-for-postgres.sh", "postgresql", "/openwifi/owanalytics"]

  owsub:
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
    command: ["./wait-for-postgres.sh", "postgresql", "/openwifi/owsub"]

  postgresql:
    image: "postgres:${POSTGRESQL_TAG}"
    networks:
      openwifi:
    command:
      - "postgres"
      - "-c"
      - "max_connections=400"
      - "-c"
      - "shared_buffers=20MB"
    env_file:
      - postgresql.env
    restart: unless-stopped
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./postgresql/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d owgw"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
